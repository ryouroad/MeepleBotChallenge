{"version":3,"file":"js/app.32de0db9.js","mappings":"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","sources":["webpack://MeepleBotBoardGame/./src/App.vue","webpack://MeepleBotBoardGame/./src/App.vue?7ccd","webpack://MeepleBotBoardGame/./src/components/Article/ArticleStore.js","webpack://MeepleBotBoardGame/./src/components/Reversi/ReversiStore.js","webpack://MeepleBotBoardGame/./src/components/Chess/ChessStore.js","webpack://MeepleBotBoardGame/./src/store.js","webpack://MeepleBotBoardGame/./src/components/Article/ArticleViewer.vue","webpack://MeepleBotBoardGame/./src/components/Article/ArticleViewer.vue?7192","webpack://MeepleBotBoardGame/./src/components/Reversi/ReversiBoard.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/BoardCell.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/BoardCell.vue?434e","webpack://MeepleBotBoardGame/./src/components/Reversi/ReversiBoard.vue?339c","webpack://MeepleBotBoardGame/./src/components/Reversi/PlayerIndicator.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/PlayerIndicator.vue?6fa3","webpack://MeepleBotBoardGame/./src/components/Reversi/ScoreBoard.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ScoreBoard.vue?096a","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatWindow.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatMessage.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatMessage.vue?bc49","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatWindow.vue?2649","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatInput.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatInput.vue?b9c2","webpack://MeepleBotBoardGame/./src/components/Reversi/FeedbackInput.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/FeedbackInput.vue?c3ab","webpack://MeepleBotBoardGame/./src/components/Reversi/AINextMoveButton.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/AINextMoveButton.vue?9cff","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatButton.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ChatButton.vue?713d","webpack://MeepleBotBoardGame/./src/components/Reversi/ReversiViewer.vue","webpack://MeepleBotBoardGame/./src/components/Reversi/ReversiViewer.vue?2f47","webpack://MeepleBotBoardGame/./src/components/Chess/ChessViewer.vue","webpack://MeepleBotBoardGame/./src/components/Chess/ChessPiece.vue","webpack://MeepleBotBoardGame/./src/components/Chess/ChessPiece.vue?7d6d","webpack://MeepleBotBoardGame/./src/components/Chess/BoardSquare.vue","webpack://MeepleBotBoardGame/./src/components/Chess/BoardSquare.vue?2f7e","webpack://MeepleBotBoardGame/./src/components/Chess/ChessBoard.vue","webpack://MeepleBotBoardGame/./src/components/Chess/ChessBoard.vue?d1a4","webpack://MeepleBotBoardGame/./src/components/Chess/PlayerIndicator.vue","webpack://MeepleBotBoardGame/./src/components/Chess/PlayerIndicator.vue?e636","webpack://MeepleBotBoardGame/./src/components/Chess/ChessViewer.vue?fc8d","webpack://MeepleBotBoardGame/./src/router/index.js","webpack://MeepleBotBoardGame/./src/main.js","webpack://MeepleBotBoardGame/./src/assets/Chess/ sync ^\\.\\/.*\\.webp$","webpack://MeepleBotBoardGame/webpack/bootstrap","webpack://MeepleBotBoardGame/webpack/runtime/chunk loaded","webpack://MeepleBotBoardGame/webpack/runtime/define property getters","webpack://MeepleBotBoardGame/webpack/runtime/global","webpack://MeepleBotBoardGame/webpack/runtime/hasOwnProperty shorthand","webpack://MeepleBotBoardGame/webpack/runtime/make namespace object","webpack://MeepleBotBoardGame/webpack/runtime/publicPath","webpack://MeepleBotBoardGame/webpack/runtime/jsonp chunk loading","webpack://MeepleBotBoardGame/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1>ミープルボットの挑戦</h1>\r\n      <p>筆者アカウント<a href=\"https://twitter.com/Rnishimu_\">X(twitter)</a> <a href=\"https://bodoge.hoobby.net/friends/28892\">ボドゲーマ</a></p>\r\n      <nav>\r\n        <ul>\r\n          <li><a :href=\"`${baseUrl}`\">ホーム</a></li>\r\n          <li><a :href=\"`${baseUrl}#boardgame`\">ミープルボットとのゲーム</a></li>\r\n          <li><a :href=\"`${baseUrl}#meeplebot`\">ミープルボット紹介</a></li>\r\n          <li><a :href=\"`${baseUrl}#articles`\">記事一覧</a></li>\r\n          <li><a :href=\"`${baseUrl}#contact`\">お問い合わせ</a></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n    \r\n    <main>\r\n      <router-view name=\"Main\" v-slot=\"{ Component }\">\r\n        <!-- Componentが存在する場合、動的にそのコンポーネントをレンダリング -->\r\n        <component :is=\"Component\" />\r\n        <!-- Componentが存在しない場合、代替テキストを表示 -->\r\n        <div v-if=\"!Component\">\r\n          <section id=\"boardgame\">\r\n            <h2>ミープルボットとのゲーム</h2>\r\n            <li><router-link :to=\"`/reversi`\">リバーシ</router-link></li>\r\n            <li><router-link :to=\"`/chess`\">チェス</router-link></li>\r\n          </section>\r\n          \r\n          <section id=\"meeplebot\">\r\n            <h2>ミープルボット紹介（キャライメージ）</h2>\r\n            <img src=./assets/MeepleBotFriend.webp alt=\"ミープルボットの画像\">\r\n            <img src=./assets/MeepleBotBoardGame.jpg alt=\"ミープルボットの画像\">\r\n            <img src=./assets/MeepleBotGPTCore.webp alt=\"ミープルボットの画像\">\r\n            <img src=./assets/MeepleBotStrategy.webp alt=\"ミープルボットの画像\">\r\n            <p>ミープルボットは、GPT（Generative Pre-trained Transformer）をメインロジックとして動作する愛らしいロボットキャラクターです。彼らの設計は、親しみやすさと機能性を兼ね備えており、ユーザーとの相互作用を重視しています。</p>\r\n            <p>このミープルボットはただのキャラクターではなく、GPTをメインロジックとして活用して、ユーザーとの相互作用を豊かにします。特にボードゲームに関して強い関心を持ち、その知識と技能は単にゲームを楽しむだけでなく、学習と進化も含まれています。ミープルボットは様々なボードゲームのルールを覚え、ゲーム戦略に関するアドバイスを提供することができます。さらに、対戦相手としても機能し、ユーザーに挑戦的かつ教育的なゲーム体験を提供します。</p>\r\n            <p>ミープルボットには多様性があり、それぞれが異なるボードゲームに特化している場合があります。この多様性により、ユーザーは自分の興味やスキルレベルに応じて最適なミープルボットを見つけ、ゲームを通じて学習や楽しみを深めることができます。ミープルボットは単なるゲームパートナーではなく、学習を促進し、戦略的思考を養うためのインテリジェントなロボットとして設計されています。</p>\r\n            <p>このようにミープルボットは、技術と遊び心を融合させた、新しいタイプのロボットキャラクターであり、ユーザーにとって魅力的で有益な存在です。彼らはボードゲームを通じて、楽しみながら学び、成長することの価値を伝えます。</p>\r\n          </section>\r\n          \r\n          <section id=\"articles\">\r\n            <h2>記事一覧</h2>\r\n            <div class=\"tags-filter\">\r\n              <p>タグフィルター\r\n                <button v-for=\"tag in availableTags\" :key=\"tag\" @click=\"filterByTag(tag)\" class=\"tag-button\">\r\n                  {{ tag }}\r\n                </button>\r\n              </p>\r\n            </div>\r\n            <div class=\"articles-container\">\r\n              <div v-for=\"article in filteredArticles\" :key=\"article.id\" class=\"article-item\">\r\n                <router-link :to=\"`/article/${article.id}`\">\r\n                  <img :src=\"article.imageUrl\" :alt=\"article.title\" class=\"article-image\">\r\n                  <h3>{{ article.title }}</h3>\r\n                </router-link>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n        </div>\r\n      </router-view>\r\n      \r\n      <section id=\"contact\">\r\n        <h2>注意</h2>\r\n        <p>このサイトは基本的にAIの力を借りたうえで、適宜修正を加えて作成しております。<br>内容には十分ご注意ください。</p>\r\n        <h2>目的・考え</h2>\r\n        <p>ボードゲームにAI技術を活用して面白いことができないか<br>という思いから2024年3月20日に筆者はこのブログを立ち上げました。</p>\r\n        <p>面白いと思った方はなんでもいいのでメッセージいただけるとありがたいです。</p>\r\n        <h2>お問い合わせ</h2>\r\n        <p>ご質問やコメントがありましたら、お気軽に<a href=\"https://twitter.com/Rnishimu_\">こちら</a>までお知らせください。</p>\r\n        <p>また、ボドゲーマアカウントは<a href=\"https://bodoge.hoobby.net/friends/28892\">こちら</a>です。</p>\r\n        <p>どちらも筆者のアカウントです。お気軽にフォローいただけると嬉しいです。</p>\r\n      </section>\r\n    </main>\r\n    <footer>\r\n      <p>© 2024 ミープルボットの挑戦. All rights reserved.</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    const store = useStore();\r\n    const articles = computed(() => store.state.articleStore.articles);\r\n    return { \r\n      articles,\r\n      selectedTag: null,\r\n      baseUrl: process.env.BASE_URL,\r\n    };\r\n  },\r\n  computed: {\r\n    availableTags() {\r\n      // 利用可能な全タグのリストを生成\r\n      const tags = new Set();\r\n      Object.values(this.articles).forEach(article => {\r\n        article.tags.forEach(tag => tags.add(tag));\r\n      });\r\n      return Array.from(tags);\r\n    },\r\n    filteredArticles() {\r\n      // 選択されたタグに基づいて記事をフィルタリング\r\n      if (!this.selectedTag) {\r\n        return Object.values(this.articles);\r\n      }\r\n      return Object.values(this.articles).filter(article =>\r\n        article.tags.includes(this.selectedTag)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    filterByTag(tag) {\r\n      this.selectedTag = tag;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  color: #333;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nheader {\r\n  background-color: #f8f9fa;\r\n  color: #333;\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 2em;\r\n}\r\n\r\nnav ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nnav ul li {\r\n  display: inline;\r\n  margin-right: 10px;\r\n}\r\n\r\nnav ul li a {\r\n  text-decoration: none;\r\n  color: #333;\r\n}\r\n\r\nmain {\r\n  margin: 40px 0;\r\n}\r\n\r\nsection {\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection h2 {\r\n  font-size: 1.5em;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nfooter {\r\n  background-color: #f8f9fa;\r\n  color: #333;\r\n  padding: 10px 0;\r\n  text-align: center;\r\n  border-top: 1px solid #e9ecef;\r\n}\r\n\r\nimg {\r\n  width: 200; /* 幅を100pxに指定 */\r\n  height: auto; /* 高さを自動調整（アスペクト比を維持） */\r\n}\r\n\r\n.articles-container {\r\n  display: flex;\r\n  overflow-x: auto;\r\n  padding: 20px 0;\r\n}\r\n\r\n.article-item {\r\n  flex: 0 0 auto;\r\n  width: 300px; /* 各記事の幅を指定 */\r\n  margin-right: 20px; /* 記事間のマージン */\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* オプショナル: 影を追加 */\r\n}\r\n\r\n.article-image {\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n}\r\n\r\n/* スクロールバーのスタイルをカスタマイズしたい場合 */\r\n.articles-container::-webkit-scrollbar {\r\n  height: 8px;\r\n}\r\n\r\n.articles-container::-webkit-scrollbar-thumb {\r\n  background-color: darkgrey;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* レスポンシブ対応 */\r\n@media (max-width: 600px) {\r\n  .article-item {\r\n    width: 100%; /* スマートフォンなどの狭い画面では記事を幅いっぱいに表示 */\r\n  }\r\n}\r\n\r\n.tags-filter {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tag-button {\r\n  background-color: #f0f0f0;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 8px 16px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.tag-button:hover {\r\n  background-color: #d0d0d0;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.tag-button:active {\r\n  background-color: #b0b0b0;\r\n}\r\n\r\n/* 選択されたタグのスタイルを追加 (オプション) */\r\n.tag-button.active {\r\n  background-color: #007BFF;\r\n  color: white;\r\n}\r\n\r\nvideo {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n</style>","import { render } from \"./App.vue?vue&type=template&id=199f4ade&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=199f4ade&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-199f4ade\"]])\n\nexport default __exports__","export const articleStore = {\r\n  namespaced: true,\r\n  state: {\r\n    articles: {\r\n      '1': {\r\n        id: \"1\",\r\n        title: 'GPT技術を核とするミープルボット：ボードゲームAIの革命',\r\n        imageUrl: require('@/assets/MeepleBotGPTCore.webp'), // 記事のメイン画像\r\n        content: `\r\n          <p>ミープルボットは、GPT技術をメインロジックとして採用し、GPTs上で動作することで、ボードゲームAIの開発において前例のない進化を遂げています。この先進的なAIは、深層学習と自然言語処理の能力を組み合わせることで、ボードゲームの戦略とルールを理解し、人間のプレイヤーに対して未知の挑戦を提供することが可能になりました。</p>\r\n          <p>ミープルボットがGPT技術を使用することの最大の利点の一つは、複雑な戦略ゲームのダイナミクスをリアルタイムで解析し、瞬時に適応する能力です。このAIは、ゲームの進行に応じて数千もの異なるシナリオをシミュレーションし、最適な戦略を導き出すことができます。</p>\r\n          <img src=\"${require('@/assets/MeepleBotStrategy.webp')}\" alt=\"ミープルボットの戦略分析\">\r\n          <p>さらに、ミープルボットはGPTsの強力な自然言語処理機能を利用して、プレイヤーとの対話を通じてゲームの指示やフィードバックを提供することができます。これにより、プレイヤーはゲーム戦略の理解を深め、スキルを向上させることが可能になります。</p>\r\n          <p>ミープルボットの開発と導入は、ボードゲーム業界においてAIの役割を再定義し、ゲームデザインとプレイヤー体験の未来を形作っています。GPT技術を核とするこのAIの進化は、ボードゲームだけでなく、教育やエンターテインメントの分野における人間とAIのインタラクションにおいても新たな可能性を開いています。</p>\r\n        `,\r\n        tags: ['AI×ボードゲーム（全記事表示）', 'GPT', '自然言語処理', 'ミープルボット'] // タグ情報を追加\r\n      },\r\n      '2': {\r\n        id: \"2\",\r\n        title: 'ボードゲームとAIの画期的な研究事例',\r\n        imageUrl: require('@/assets/innovative-AI-research.webp'), // 記事のメイン画像\r\n        tags: ['AI×ボードゲーム（全記事表示）'] ,\r\n        content: `\r\n          <h2>DeepMindのAlphaGo</h2>\r\n          <p>GoogleのDeepMindが開発したAI、AlphaGoは、囲碁の世界チャンピオンである李世乭九段を破りました。AlphaGoは深層学習とモンテカルロ木探索を組み合わせたアルゴリズムを使用しています。これは、ボードゲームのAI研究における重要な進歩であり、AIが人間の直感と戦略を超えることができることを示しています。</p>\r\n          <img src=\"${require('@/assets/AlphaGo.webp')}\" alt=\"AlphaGoの勝利\">\r\n      \r\n          <h2>IBMのDeep Blue</h2>\r\n          <p>1997年、IBMのDeep Blueはチェスの世界チャンピオンであるガリー・カスパロフを破りました。Deep Blueは専門的なハードウェアと高度に最適化されたアルゴリズムを使用しており、その時点で最も強力なチェスプレーヤーとなりました。</p>\r\n          <img src=\"${require('@/assets/DeepBlue.webp')}\" alt=\"Deep Blueの勝利\">\r\n      \r\n          <h2>OpenAIのDota 2 AI</h2>\r\n          <p>OpenAI Fiveは、人間のプロチームと競争できるレベルのDota 2のAIを開発しました。Dota 2は非常に複雑なマルチプレイヤーオンラインバトルアリーナゲームであり、その成功はAIが複雑なタスクを処理できることを示しています。</p>\r\n          <img src=\"${require('@/assets/Dota2.webp')}\" alt=\"OpenAI Fiveの試合\">\r\n      \r\n          <p>これらの事例は、AIがボードゲームの戦略と直感を学び、人間のプレーヤーを超えることができることを示しています。これらのAIは、ゲームのルールを理解し、複数の手を前もって計画し、それぞれの手の結果を予測する能力を持っています。これらの能力は、ボードゲームだけでなく、他の多くの問題解決の状況でも適用可能です。</p>\r\n        `,\r\n      },\r\n      '3': {\r\n        id: \"3\",\r\n        title: 'ボドゲAIの革新：モンテカルロツリーサーチと強化学習',\r\n        imageUrl: require('@/assets/MCTS-example.webp'), // 記事のメイン画像\r\n        tags: ['AI×ボードゲーム（全記事表示）'] ,\r\n        content: `\r\n          <p>モンテカルロツリーサーチ (MCTS) と強化学習は、AIがボードゲームの複雑な局面をどう攻略するかの鍵を握っています。これらの技術により、AIはランダムな手を試しながら最適な戦略を導き出す能力を持ちます。</p>\r\n          <p>特に囲碁や将棋のようなゲームでは、これらの技術の組み合わせによって、人間のプレイヤーさえも予期せぬ戦略を編み出しています。AIの学習プロセスは、複数の局面をシミュレートし、それぞれの結果を評価することから始まります。この評価は、勝利の可能性が高い手や、長期的に見て有利なポジションを見極めるのに役立ちます。</p>\r\n          <p>モンテカルロツリーサーチは、特に不確定要素が多く、可能な手の数が膨大なゲームでその真価を発揮します。ランダムな手法に基づくこのアプローチは、従来のアルゴリズムでは計算しきれないほどの複雑なゲームでも、最適な手を見つけ出すことが可能です。</p>\r\n          <p>強化学習は、エージェントが「試行錯誤」を通じて学習を進めるプロセスです。成功には報酬が与えられ、エージェントは報酬を最大化する行動を学びます。これにより、AIは未知のゲームや状況でも自ら最適な戦略を編み出すことができるようになります。</p>\r\n          <p>これらの技術の組み合わせによって、AIはただのプログラムを超えた「学習するエンティティ」となり、ボードゲームのみならず、リアルタイムで戦略を練る必要がある様々な分野での応用が期待されています。将来的には、これらのAI技術が、経済や医療、物流など、さらに幅広い分野での意思決定を支援する日も来るかもしれません。</p>\r\n        `,\r\n      },          \r\n    }\r\n  },\r\n  getters: {\r\n    getArticleById: (state) => (id) => {\r\n      return state.articles[id] || null;\r\n    }\r\n  }\r\n}\r\n","// ReversiStore.js\r\nimport axios from 'axios'\r\nconst API_KEY = process.env.VUE_APP_API_KEY;\r\nconst SERVER_URL = process.env.VUE_APP_SERVER_URL;\r\n\r\nconst directions = [\r\n    [-1, -1], [-1, 0], [-1, 1],\r\n    [0, -1],           [0, 1],\r\n    [1, -1], [1, 0], [1, 1]\r\n];\r\n\r\nfunction flipDiscs(board, x, y, color) {\r\n    let flipped = false; // ひっくり返せたかどうかのフラグ\r\n    for (const [dx, dy] of directions) {\r\n        let i = x + dx, j = y + dy;\r\n        const discsToFlip = [];\r\n        while (i >= 0 && i < 8 && j >= 0 && j < 8 && board[j][i] === (color === 'black' ? 'white' : 'black')) {\r\n            discsToFlip.push([i, j]);\r\n            i += dx;\r\n            j += dy;\r\n        }\r\n        if (i >= 0 && i < 8 && j >= 0 && j < 8 && board[j][i] === color) {\r\n            for (const [i, j] of discsToFlip) {\r\n                board[j][i] = color;\r\n                flipped = true; // 石をひっくり返せた\r\n            }\r\n        }\r\n    }\r\n    // console.log(\"flipped:\"+flipped);\r\n    return flipped; // ひっくり返せたかどうかを返す\r\n}\r\n\r\nfunction isValidMove(board, x, y, color) {\r\n    // 指定された位置にすでに石があるか、または盤外であれば無効\r\n    // console.log(board[y][x]);\r\n    if (board[y][x] !== null) return false;\r\n    \r\n    // 仮に石を置いてみて、ひっくり返せるかチェック\r\n    const tempBoard = JSON.parse(JSON.stringify(board)); // 盤面のディープコピー\r\n    tempBoard[y][x] = color; // 石を置く\r\n    if (!flipDiscs(tempBoard, x, y, color)) {\r\n        // ひっくり返せなかったら無効\r\n        return false;\r\n    }\r\n    return true; // ひっくり返せるなら有効\r\n}\r\n\r\nfunction hasValidMove(board, color) {\r\n    for (let y = 0; y < 8; y++) {\r\n        for (let x = 0; x < 8; x++) {\r\n            if (board[y][x] === null && isValidMove(board, x, y, color)) {\r\n                return true; // 少なくとも1つ合法手が見つかった\r\n            }\r\n        }\r\n    }\r\n    return false; // 合法手がない\r\n}\r\n\r\nfunction calculateValidMoves(board, color) {\r\n    const validMoves = [];\r\n    for (let y = 0; y < 8; y++) {\r\n        for (let x = 0; x < 8; x++) {\r\n            if (board[y][x] === null && isValidMove(board, x, y, color)) {\r\n                validMoves.push({ x, y });\r\n            }\r\n        }\r\n    }\r\n    return validMoves;\r\n}\r\n\r\n\r\nexport const reversiStore = {\r\n    namespaced: true,\r\n    state: {\r\n        game: {\r\n            board: Array(8).fill().map((_, i) => Array(8).fill().map((_, j) => {\r\n                if (i === 3 && j === 3 || i === 4 && j === 4) return 'white'\r\n                if (i === 3 && j === 4 || i === 4 && j === 3) return 'black'\r\n                return null\r\n            })),\r\n            currentPlayer: 'black',\r\n        },\r\n        chat: {\r\n            messages: [],\r\n            threadId: null,\r\n        },\r\n        isNextMoveLoading: false,\r\n        isChatLoading: false,\r\n    },\r\n    mutations: {\r\n        setGame(state, game) {\r\n            state.game = game\r\n        },\r\n        addMessage(state, message) {\r\n            state.chat.messages.push(message)\r\n        },\r\n        setBoard(state, { x, y, color }) {\r\n            state.game.board[y][x] = color\r\n        },\r\n        switchPlayer(state) {\r\n            state.game.currentPlayer = state.game.currentPlayer === 'black' ? 'white' : 'black'\r\n        },\r\n        setWinner(state, winner) {\r\n            state.game.winner = winner; // winnerを状態に保存\r\n        },\r\n        setGameOver(state, isGameOver) {\r\n            state.game.isGameOver = isGameOver; // ゲーム終了状態を更新\r\n        },\r\n        setIsNextMoveLoading(state, isNextMoveLoading) {\r\n            state.isNextMoveLoading = isNextMoveLoading;\r\n        },\r\n        setIsChatLoading(state, isChatLoading) {\r\n            state.isChatLoading = isChatLoading;\r\n        },\r\n        setThreadId(state, threadId) {\r\n            state.chat.threadId = threadId;\r\n        },\r\n        setIsFeedbackLoading(state, isFeedbackLoading){\r\n            state.isFeedbackLoading = isFeedbackLoading;\r\n        }\r\n    },\r\n    actions: {\r\n        async sendFeedback({ commit }, message) {\r\n            commit('setIsFeedbackLoading', true); // ローディング開始\r\n            const post_response = await axios.post(SERVER_URL+'feedback', {\r\n                feedback: message,\r\n            }, {\r\n                headers: {\r\n                    'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                }\r\n            });\r\n            console.log(post_response)\r\n            commit('setIsFeedbackLoading', false); // ローディング終了\r\n        },\r\n        async sendMessage({ commit, state }, message) {\r\n            commit('setIsChatLoading', true); // ローディング開始\r\n            commit('addMessage', { text: message, sender: 'user' })\r\n            const validMoves = calculateValidMoves(state.game.board, state.game.currentPlayer);\r\n            const post_response = await axios.post(SERVER_URL+'reversi/chat', {\r\n                board: state.game.board,\r\n                currentPlayer: state.game.currentPlayer,\r\n                validMoves: validMoves,\r\n                question: message,\r\n            }, {\r\n                headers: {\r\n                    'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                    'x-thread-id': state.chat.threadId,\r\n                }\r\n            });\r\n            if(post_response.status===200){\r\n                // console.log(post_response)\r\n                var response = await axios.get(SERVER_URL+'reversi/chat', {\r\n                    headers: {\r\n                        'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                        'x-thread-id': post_response.data.threadId,\r\n                        'x-run-id': post_response.data.runId,\r\n                    }\r\n                });\r\n                while (response.status!=200){\r\n                    response = await axios.get(SERVER_URL+'reversi/chat', {\r\n                        headers: {\r\n                            'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                            'x-thread-id': post_response.data.threadId,\r\n                            'x-run-id': post_response.data.runId,\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            // APIからチャットの返答を受け取る\r\n            commit('setThreadId', response.data.threadId);\r\n            commit('addMessage', { text: response.data.text, sender: 'ai' })\r\n            commit('setIsChatLoading', false); // ローディング終了\r\n        },\r\n        handleMove({ commit, state, dispatch }, { x, y }) {\r\n            const color = state.game.currentPlayer;\r\n            if (!isValidMove(state.game.board, x, y, color)) {\r\n                console.error(\"Invalid move\");\r\n                return;\r\n            }\r\n            commit('setBoard', { x, y, color });\r\n            if (flipDiscs(state.game.board, x, y, color)) {\r\n                commit('switchPlayer');\r\n                // ターンを変えた後のプレイヤーが合法手を持っているかチェック\r\n                if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                    // 次のプレイヤーが合法手を持っていない場合、もう一度プレイヤーを切り替え\r\n                    commit('switchPlayer');\r\n                    if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                        // どちらのプレイヤーも合法手を持っていない場合、ゲーム終了\r\n                        dispatch('endGame');\r\n                    }\r\n                }\r\n            } else {\r\n                console.error(\"No discs flipped\");\r\n            }\r\n        },\r\n        endGame({ state, commit }) {\r\n            let blackCount = 0;\r\n            let whiteCount = 0;\r\n            // 盤面をスキャンして、それぞれの石の数をカウント\r\n            state.game.board.forEach(row => {\r\n                row.forEach(cell => {\r\n                    if (cell === 'black') blackCount++;\r\n                    if (cell === 'white') whiteCount++;\r\n                });\r\n            });\r\n    \r\n            // 勝者を決定\r\n            let winner = null;\r\n            if (blackCount > whiteCount) {\r\n                winner = 'black';\r\n            } else if (whiteCount > blackCount) {\r\n                winner = 'white';\r\n            } // それ以外の場合は引き分け（winnerはnullのまま）\r\n    \r\n            // 結果を保存\r\n            commit('setWinner', winner);\r\n            commit('setGameOver', true);\r\n        },\r\n        async getNextMove({ commit, state, dispatch }) {\r\n            const validMoves = calculateValidMoves(state.game.board, state.game.currentPlayer);\r\n            if (validMoves.length === 0) {\r\n                // 合法手がない場合、プレイヤーを切り替える\r\n                commit('switchPlayer');\r\n                // もう一度合法手があるかチェックし、もしなければゲーム終了\r\n                if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                    dispatch('endGame');\r\n                    return; // ゲーム終了なのでここで処理を終了\r\n                }\r\n                // プレイヤーを切り替えた後、合法手がある場合は処理を続ける\r\n            }\r\n            commit('setIsNextMoveLoading', true); // ローディング開始\r\n            try {\r\n                const post_response = await axios.post(SERVER_URL+'reversi/move', {\r\n                    board: state.game.board,\r\n                    currentPlayer: state.game.currentPlayer,\r\n                    validMoves: validMoves, // ここに合法手を追加\r\n                }, {\r\n                    headers: {\r\n                      'x-api-key': API_KEY // ヘッダーにAPIキーを追加\r\n                    }\r\n                });\r\n                if(post_response.status===200){\r\n                    // console.log(post_response)\r\n                    var response = await axios.get(SERVER_URL+'reversi/move', {\r\n                        headers: {\r\n                          'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                          'x-thread-id': post_response.data.threadId,\r\n                          'x-run-id': post_response.data.runId,\r\n                        }\r\n                    });\r\n                    while (response.status!=200){\r\n                        response = await axios.get(SERVER_URL+'reversi/move', {\r\n                            headers: {\r\n                                'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                                'x-thread-id': post_response.data.threadId,\r\n                                'x-run-id': post_response.data.runId,\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // APIから次の手の情報を受け取る\r\n                const { x, y } = response.data;\r\n            \r\n                // 受け取った手をゲーム状態に適用する\r\n                if (typeof x === 'number' && typeof y === 'number' && x != -1 && y != -1) {\r\n                    // 石を置く処理を実行\r\n                    commit('setBoard', { x, y, color: state.game.currentPlayer });\r\n                    // 石をひっくり返す処理を実行\r\n                    flipDiscs(state.game.board, x, y, state.game.currentPlayer);\r\n                    // プレイヤーを切り替える\r\n                    commit('switchPlayer');\r\n                } else {\r\n                    console.error('Invalid move received from backend');\r\n                }\r\n            } catch (error) {\r\n              console.error('Error fetching next move:', error);\r\n            }\r\n            commit('setIsNextMoveLoading', false); // ローディング終了\r\n        },        \r\n    },\r\n}\r\n","// import axios from 'axios'\r\n// const API_KEY = process.env.VUE_APP_API_KEY;\r\n// const SERVER_URL = process.env.VUE_APP_SERVER_URL;\r\n\r\nexport const chessStore = {\r\n    namespaced: true,\r\n    state: {\r\n        game: {\r\n            board: Array(8).fill().map((_, i) => Array(8).fill().map((_, j) => {\r\n                if (i === 0 & j === 0 | i === 0 & j === 7) return { type:\"Rook\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 0 & j === 1 | i === 0 & j === 6) return { type:\"Knight\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 0 & j === 2 | i === 0 & j === 5) return { type:\"Bishop\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 0 & j === 3) return { type:\"Queen\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 0 & j === 4) return { type:\"King\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 1) return { type:\"Pawn\", color: \"Black\", isPossibleMove: false }\r\n                if (i === 6) return { type:\"Pawn\", color: \"White\", isPossibleMove: false }\r\n                if (i === 7 & j === 0 | i === 7 & j === 7) return { type:\"Rook\", color: \"White\", isPossibleMove: false }\r\n                if (i === 7 & j === 1 | i === 7 & j === 6) return { type:\"Knight\", color: \"White\", isPossibleMove: false }\r\n                if (i === 7 & j === 2 | i === 7 & j === 5) return { type:\"Bishop\", color: \"White\", isPossibleMove: false }\r\n                if (i === 7 & j === 3) return { type:\"Queen\", color: \"White\", isPossibleMove: false }\r\n                if (i === 7 & j === 4) return { type:\"King\", color: \"White\", isPossibleMove: false }\r\n                return { type:null, color: null, isPossibleMove: false }\r\n            })),\r\n            currentPlayer: 'White',\r\n            from: null,\r\n            possibleMoves: null,\r\n        },\r\n        chat: {\r\n            messages: [],\r\n            threadId: null,\r\n        },\r\n        isNextMoveLoading: false,\r\n        isChatLoading: false,\r\n    },\r\n    mutations: {\r\n        setGame(state, game) {\r\n            state.game = game\r\n        },\r\n        addMessage(state, message) {\r\n            state.chat.messages.push(message)\r\n        },\r\n        switchPlayer(state) {\r\n            state.game.currentPlayer = state.game.currentPlayer === 'Black' ? 'White' : 'Black'\r\n        },\r\n        setWinner(state, winner) {\r\n            state.game.winner = winner; // winnerを状態に保存\r\n        },\r\n        checkForEndGame(state) {\r\n            // 勝敗判定のロジックをここに実装\r\n            const hasLegalMove = this.calculateHasLegalMove(state);\r\n            const isCheck = this.isKingInCheck(state);\r\n    \r\n            if (!hasLegalMove) {\r\n                if (isCheck) {\r\n                    // チェックメイトの場合\r\n                    state.game.winner = state.game.currentPlayer === 'Black' ? 'White' : 'Black';\r\n                    state.game.isGameOver = true;\r\n                } else {\r\n                    // ステイルメイトの場合\r\n                    state.game.isGameOver = true;\r\n                    state.game.winner = 'Draw'; // 引き分け\r\n                }\r\n            }\r\n        },\r\n        calculateHasLegalMove(state) {\r\n            for (let y = 0; y < 8; y++) {\r\n                for (let x = 0; x < 8; x++) {\r\n                    const cell = state.game.board[y][x];\r\n                    // ピースが現在のプレイヤーのものであるか確認\r\n                    if (cell && cell.color === state.game.currentPlayer) {\r\n                        // このピースに対して可能な全ての移動を計算\r\n                        const possibleMoves = this.calculatePossibleMoves(state, cell.piece, { x, y });\r\n                        if (possibleMoves.length > 0) {\r\n                            // 少なくとも1つの合法的な手が見つかった\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 合法的な手が1つも見つからなかった\r\n            return false;\r\n        },\r\n        isKingInCheck(state) {\r\n            // キングの位置を特定\r\n            let kingPosition = { x: -1, y: -1 };\r\n            for (let y = 0; y < state.game.board.length; y++) {\r\n                for (let x = 0; x < state.game.board[y].length; x++) {\r\n                    const piece = state.game.board[y][x];\r\n                    if (piece && piece.type === 'King' && piece.color === state.game.currentPlayer) {\r\n                        kingPosition = { x, y };\r\n                        break;\r\n                    }\r\n                }\r\n                if (kingPosition.x !== -1) break;\r\n            }\r\n    \r\n            // 全ての敵のピースを確認し、キングに到達できるかチェック\r\n            for (let y = 0; y < state.game.board.length; y++) {\r\n                for (let x = 0; x < state.game.board[y].length; x++) {\r\n                    const piece = state.game.board[y][x];\r\n                    if (piece && piece.color !== state.game.currentPlayer) {\r\n                        // このピースからキングへの攻撃が可能か確認\r\n                        const possibleMoves = this.calculatePossibleMoves(piece, { x, y })\r\n                        const isKingInCheck = possibleMoves.some(move => move.x === kingPosition.x && move.y === kingPosition.y);\r\n                        if (isKingInCheck) {\r\n                            console.log(\"キングはチェックされています。\");\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        setIsNextMoveLoading(state, isNextMoveLoading) {\r\n            state.isNextMoveLoading = isNextMoveLoading;\r\n        },\r\n        setIsChatLoading(state, isChatLoading) {\r\n            state.isChatLoading = isChatLoading;\r\n        },\r\n        setThreadId(state, threadId) {\r\n            state.chat.threadId = threadId;\r\n        },\r\n        setIsFeedbackLoading(state, isFeedbackLoading){\r\n            state.isFeedbackLoading = isFeedbackLoading;\r\n        },\r\n        setFrom(state, position){\r\n            state.game.from = position\r\n        },\r\n        clearFrom(state){\r\n            state.game.from = null\r\n        },\r\n        // ピースを移動させる\r\n        movePiece(state, { from, to }) {\r\n            const piece = state.game.board[from.y][from.x];\r\n            state.game.board[to.y][to.x] = piece;\r\n            state.game.board[from.y][from.x] = null;\r\n            // プレイヤーの切り替え\r\n            state.game.currentPlayer = state.game.currentPlayer === 'Black' ? 'White' : 'Black';\r\n        },\r\n        setPossibleMoves(state, moves) {\r\n            console.log(\"setPossibleMoves\")\r\n        \r\n            // 新しいボードを作成して、すべてのisPossibleMoveをfalseにリセット\r\n            const newBoard = state.game.board.map(row => \r\n                row.map(cell => ({ ...cell, isPossibleMove: false }))\r\n            );\r\n            \r\n            // moves配列に含まれる位置のisPossibleMoveをTrueに設定\r\n            moves.forEach(({ x, y }) => {\r\n                if (newBoard[y] && newBoard[y][x]) {\r\n                    // 直接newBoardを更新\r\n                    newBoard[y][x] = { ...newBoard[y][x], isPossibleMove: true };\r\n                    console.log(x, y);\r\n                }\r\n            });\r\n            \r\n            // 新しいボードでstate.game.boardを更新\r\n            // この代入によりVueのリアクティブ性がトリガーされる\r\n            state.game.board = newBoard;\r\n        },\r\n        \r\n        clearPossibleMoves(state) {\r\n            // 全てのマスのisPossibleMoveをFalseにリセット\r\n            state.game.board = state.game.board.map(row => \r\n                row.map(cell => ({ ...cell, isPossibleMove: false }))\r\n            );\r\n            state.game.possibleMoves = null\r\n        },\r\n    },\r\n    actions: {\r\n        calculatePossibleMoves({ commit, state }, { piece, position }) {\r\n            // 移動可能なマスを格納する配列\r\n            let possibleMoves = [];\r\n            if (piece.color === state.game.currentPlayer){                \r\n                // ピースがポーンの場合のみ処理を実行\r\n                if (piece.type === 'Pawn') {\r\n                    const { x, y } = position;\r\n                    const direction = piece.color === 'White' ? -1 : 1; // 白は上(-1)に、黒は下(1)に進む\r\n                    console.log(`Pawn move check ${x},${y},${direction}`);\r\n                    \r\n                    // ポーンの基本的な前進\r\n                    if (state.game.board[y + direction]?.[x].type === null) {\r\n                        possibleMoves.push({ x, y: y + direction });\r\n                        // 初手での2マス移動\r\n                        const startRow = piece.color === 'White' ? 6 : 1; // 白の開始行は6、黒の開始行は1\r\n                        if (y === startRow && state.game.board[y + 2 * direction]?.[x].type === null) {\r\n                            possibleMoves.push({ x, y: y + 2 * direction });\r\n                        }\r\n                    }\r\n        \r\n                    // 斜め前の敵ピースを取る\r\n                    [-1, 1].forEach(dx => {\r\n                        if (state.game.board[y + direction]?.[x + dx]?.color && state.game.board[y + direction][x + dx].color !== piece.color) {\r\n                            possibleMoves.push({ x: x + dx, y: y + direction });\r\n                        }\r\n                    });\r\n                }\r\n                if (piece.type === 'Rook' | piece.type === 'Queen') {\r\n                    const { x, y } = position;\r\n                \r\n                    // 水平方向の移動可能性をチェック\r\n                    for (let dx = -1; dx <= 1; dx += 2) {\r\n                        let newX = x + dx;\r\n                        while (newX >= 0 && newX < 8 && state.game.board[y][newX] === null) {\r\n                            possibleMoves.push({ x: newX, y });\r\n                            newX += dx;\r\n                        }\r\n                        // 他の色のピースを取ることができるかチェック\r\n                        if (newX >= 0 && newX < 8 && state.game.board[y][newX]?.color !== piece.color) {\r\n                            possibleMoves.push({ x: newX, y });\r\n                        }\r\n                    }\r\n                \r\n                    // 垂直方向の移動可能性をチェック\r\n                    for (let dy = -1; dy <= 1; dy += 2) {\r\n                        let newY = y + dy;\r\n                        while (newY >= 0 && newY < 8 && state.game.board[newY][x] === null) {\r\n                            possibleMoves.push({ x, y: newY });\r\n                            newY += dy;\r\n                        }\r\n                        // 他の色のピースを取ることができるかチェック\r\n                        if (newY >= 0 && newY < 8 && state.game.board[newY][x]?.color !== piece.color) {\r\n                            possibleMoves.push({ x, y: newY });\r\n                        }\r\n                    }\r\n                }\r\n                if (piece.type === 'Knight') {\r\n                    const { x, y } = position;\r\n                    // ナイトの移動可能な8方向\r\n                    const moves = [[2, 1], [2, -1], [-2, 1], [-2, -1], [1, 2], [1, -2], [-1, 2], [-1, -2]];\r\n                \r\n                    moves.forEach(([dx, dy]) => {\r\n                        const newX = x + dx, newY = y + dy;\r\n                        // ボードの範囲内であるか、移動先に自分のピースがないことを確認\r\n                        if (newX >= 0 && newX < 8 && newY >= 0 && newY < 8 && (state.game.board[newY][newX] === null || state.game.board[newY][newX].color !== piece.color)) {\r\n                            possibleMoves.push({ x: newX, y: newY });\r\n                        }\r\n                    });\r\n                }\r\n                if (piece.type === 'Bishop' || piece.type === 'Queen') {\r\n                    const { x, y } = position;\r\n                    // ビショップまたはクイーンの移動可能な4つの斜め方向\r\n                    const directions = [\r\n                        { dx: 1, dy: -1 }, // 右上\r\n                        { dx: 1, dy: 1 },  // 右下\r\n                        { dx: -1, dy: -1 }, // 左上\r\n                        { dx: -1, dy: 1 }  // 左下\r\n                    ];\r\n                \r\n                    directions.forEach(({ dx, dy }) => {\r\n                        let newX = x, newY = y; // 初期位置を設定\r\n                        const flag = true;\r\n                        while (flag) { // 無限ループ\r\n                            newX += dx; // 次の位置へ移動\r\n                            newY += dy;\r\n                            \r\n                            // 盤面の範囲を超えたらループを抜ける\r\n                            if (newX < 0 || newX >= 8 || newY < 0 || newY >= 8) {\r\n                                break;\r\n                            }\r\n                            \r\n                            // 次のマスが空いていれば、可能な移動として追加\r\n                            if (state.game.board[newY][newX].color === null) {\r\n                                console.log(`Bishop add ${newX},${newY}`)\r\n                                possibleMoves.push({ x: newX, y: newY });\r\n                            } else {\r\n                                // 他の色のピースを取ることができるかチェックし、できれば追加してループを抜ける\r\n                                if (state.game.board[newY][newX].color !== piece.color) {\r\n                                    console.log(`Bishop take ${newX},${newY}`)\r\n                                    possibleMoves.push({ x: newX, y: newY });\r\n                                }\r\n                                break; // 自分のピースまたは相手のピースに遭遇したらループを抜ける\r\n                            }\r\n                        }\r\n                    });\r\n                }                              \r\n                if (piece.type === 'King') {\r\n                    const { x, y } = position;\r\n                \r\n                    // キングの移動可能な8方向（水平、垂直、斜め）\r\n                    const moves = [\r\n                        [1, 0], [1, 1], [0, 1], [-1, 1], \r\n                        [-1, 0], [-1, -1], [0, -1], [1, -1]\r\n                    ];\r\n                \r\n                    moves.forEach(([dx, dy]) => {\r\n                        const newX = x + dx, newY = y + dy;\r\n                        // ボードの範囲内かつ移動先に自分のピースがないことを確認\r\n                        if (newX >= 0 && newX < 8 && newY >= 0 && newY < 8 && (state.game.board[newY][newX] === null || state.game.board[newY][newX].color !== piece.color)) {\r\n                            possibleMoves.push({ x: newX, y: newY });\r\n                        }\r\n                    });\r\n                }            \r\n            }\r\n            console.log(possibleMoves)\r\n        \r\n            // 計算した移動可能なマスをステートにコミット\r\n            if(possibleMoves.length > 0){\r\n                commit('setPossibleMoves', possibleMoves);\r\n                commit('setFrom', position)\r\n            }\r\n\r\n            return possibleMoves\r\n        },\r\n        // ピースを移動させるアクション\r\n        performMove({ commit }, { from, to }) {\r\n            commit('movePiece', { from, to });\r\n            commit('clearPossibleMoves');\r\n            commit('clearFrom')\r\n        },\r\n    },\r\n      \r\n        /*\r\n        async sendFeedback({ commit }, message) {\r\n            commit('setIsFeedbackLoading', true); // ローディング開始\r\n            const post_response = await axios.post(SERVER_URL+'feedback', {\r\n                feedback: message,\r\n            }, {\r\n                headers: {\r\n                    'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                }\r\n            });\r\n            console.log(post_response)\r\n            commit('setIsFeedbackLoading', false); // ローディング終了\r\n        },\r\n        async sendMessage({ commit, state }, message) {\r\n            commit('setIsChatLoading', true); // ローディング開始\r\n            commit('addMessage', { text: message, sender: 'user' })\r\n            const validMoves = calculateValidMoves(state.game.board, state.game.currentPlayer);\r\n            const post_response = await axios.post(SERVER_URL+'reversi/chat', {\r\n                board: state.game.board,\r\n                currentPlayer: state.game.currentPlayer,\r\n                validMoves: validMoves,\r\n                question: message,\r\n            }, {\r\n                headers: {\r\n                    'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                    'x-thread-id': state.chat.threadId,\r\n                }\r\n            });\r\n            if(post_response.status===200){\r\n                // console.log(post_response)\r\n                var response = await axios.get(SERVER_URL+'reversi/chat', {\r\n                    headers: {\r\n                        'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                        'x-thread-id': post_response.data.threadId,\r\n                        'x-run-id': post_response.data.runId,\r\n                    }\r\n                });\r\n                while (response.status!=200){\r\n                    response = await axios.get(SERVER_URL+'reversi/chat', {\r\n                        headers: {\r\n                            'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                            'x-thread-id': post_response.data.threadId,\r\n                            'x-run-id': post_response.data.runId,\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            // APIからチャットの返答を受け取る\r\n            commit('setThreadId', response.data.threadId);\r\n            commit('addMessage', { text: response.data.text, sender: 'ai' })\r\n            commit('setIsChatLoading', false); // ローディング終了\r\n        },*/\r\n        /*handleMove({ commit, state, dispatch }, { x, y }) {\r\n            const color = state.game.currentPlayer;\r\n            if (!isValidMove(state.game.board, x, y, color)) {\r\n                // console.error(\"Invalid move\");\r\n                return;\r\n            }\r\n            commit('setBoard', { x, y, color });\r\n            if (flipDiscs(state.game.board, x, y, color)) {\r\n                commit('switchPlayer');\r\n                // ターンを変えた後のプレイヤーが合法手を持っているかチェック\r\n                if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                    // 次のプレイヤーが合法手を持っていない場合、もう一度プレイヤーを切り替え\r\n                    commit('switchPlayer');\r\n                    if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                        // どちらのプレイヤーも合法手を持っていない場合、ゲーム終了\r\n                        dispatch('endGame');\r\n                    }\r\n                }\r\n            } else {\r\n                console.error(\"No discs flipped\");\r\n            }\r\n        },*/\r\n        /*endGame({ state, commit }) {\r\n            let blackCount = 0;\r\n            let whiteCount = 0;\r\n            // 盤面をスキャンして、それぞれの石の数をカウント\r\n            state.game.board.forEach(row => {\r\n                row.forEach(cell => {\r\n                    if (cell === 'black') blackCount++;\r\n                    if (cell === 'white') whiteCount++;\r\n                });\r\n            });\r\n    \r\n            // 勝者を決定\r\n            let winner = null;\r\n            if (blackCount > whiteCount) {\r\n                winner = 'black';\r\n            } else if (whiteCount > blackCount) {\r\n                winner = 'white';\r\n            } // それ以外の場合は引き分け（winnerはnullのまま）\r\n    \r\n            // 結果を保存\r\n            commit('setWinner', winner);\r\n            commit('setGameOver', true);\r\n        },\r\n        async getNextMove({ commit, state, dispatch }) {\r\n            const validMoves = calculateValidMoves(state.game.board, state.game.currentPlayer);\r\n            if (validMoves.length === 0) {\r\n                // 合法手がない場合、プレイヤーを切り替える\r\n                commit('switchPlayer');\r\n                // もう一度合法手があるかチェックし、もしなければゲーム終了\r\n                if (!hasValidMove(state.game.board, state.game.currentPlayer)) {\r\n                    dispatch('endGame');\r\n                    return; // ゲーム終了なのでここで処理を終了\r\n                }\r\n                // プレイヤーを切り替えた後、合法手がある場合は処理を続ける\r\n            }\r\n            commit('setIsNextMoveLoading', true); // ローディング開始\r\n            try {\r\n                const post_response = await axios.post(SERVER_URL+'reversi/move', {\r\n                    board: state.game.board,\r\n                    currentPlayer: state.game.currentPlayer,\r\n                    validMoves: validMoves, // ここに合法手を追加\r\n                }, {\r\n                    headers: {\r\n                      'x-api-key': API_KEY // ヘッダーにAPIキーを追加\r\n                    }\r\n                });\r\n                if(post_response.status===200){\r\n                    // console.log(post_response)\r\n                    var response = await axios.get(SERVER_URL+'reversi/move', {\r\n                        headers: {\r\n                          'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                          'x-thread-id': post_response.data.threadId,\r\n                          'x-run-id': post_response.data.runId,\r\n                        }\r\n                    });\r\n                    while (response.status!=200){\r\n                        response = await axios.get(SERVER_URL+'reversi/move', {\r\n                            headers: {\r\n                                'x-api-key': API_KEY, // ヘッダーにAPIキーを追加\r\n                                'x-thread-id': post_response.data.threadId,\r\n                                'x-run-id': post_response.data.runId,\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // APIから次の手の情報を受け取る\r\n                const { x, y } = response.data;\r\n            \r\n                // 受け取った手をゲーム状態に適用する\r\n                if (typeof x === 'number' && typeof y === 'number' && x != -1 && y != -1) {\r\n                    // 石を置く処理を実行\r\n                    commit('setBoard', { x, y, color: state.game.currentPlayer });\r\n                    // 石をひっくり返す処理を実行\r\n                    flipDiscs(state.game.board, x, y, state.game.currentPlayer);\r\n                    // プレイヤーを切り替える\r\n                    commit('switchPlayer');\r\n                } else {\r\n                    console.error('Invalid move received from backend');\r\n                }\r\n            } catch (error) {\r\n              console.error('Error fetching next move:', error);\r\n            }\r\n            commit('setIsNextMoveLoading', false); // ローディング終了\r\n        },        \r\n    },*/\r\n}\r\n","import { createStore } from 'vuex';\r\nimport { articleStore } from './components/Article/ArticleStore';\r\nimport { reversiStore } from './components/Reversi/ReversiStore';\r\nimport { chessStore } from './components/Chess/ChessStore';\r\n\r\n// Vuexストアの作成とモジュールの登録\r\nexport default createStore({\r\n  modules: {\r\n    articleStore,\r\n    reversiStore,\r\n    chessStore,\r\n  }\r\n});\r\n","<template>\r\n    <div v-if=\"article\" class=\"article\">\r\n      <h1>{{ article.title }}</h1>\r\n      <img :src=\"article.imageUrl\" alt=\"Article image\">\r\n      <div v-html=\"article.content\"></div>\r\n    </div>\r\n    <div v-else>\r\n      <p>記事が見つかりません。</p>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n  \r\nexport default {\r\n  computed: {\r\n    ...mapGetters({\r\n      getArticleById: 'articleStore/getArticleById'\r\n    }),\r\n    article() {\r\n      console.log(this.$route.params.id);\r\n      console.log(this.getArticleById(this.$route.params.id));\r\n      return this.getArticleById(this.$route.params.id);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n  img {\r\n    width: 200px; /* 幅を200pxに指定 */\r\n    height: auto; /* 高さを自動調整（アスペクト比を維持） */\r\n  }\r\n  \r\n</style>","import { render } from \"./ArticleViewer.vue?vue&type=template&id=28491169\"\nimport script from \"./ArticleViewer.vue?vue&type=script&lang=js\"\nexport * from \"./ArticleViewer.vue?vue&type=script&lang=js\"\n\nimport \"./ArticleViewer.vue?vue&type=style&index=0&id=28491169&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ReversiBoard.vue -->\r\n<template>\r\n  <div class=\"board\">\r\n    <div v-for=\"(row, i) in board\" :key=\"i\" class=\"row\">\r\n      <div v-for=\"(cell, j) in row\" :key=\"j\">\r\n          <BoardCell :state=\"cell\" @click=\"() => this.handleMove({ x: j, y: i })\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport BoardCell from './BoardCell.vue'\r\n\r\nexport default {\r\n  components: { BoardCell },\r\n  computed: mapState({\r\n    board: state => state.reversiStore.game.board,\r\n  }),\r\n  methods: {\r\n    ...mapActions('reversiStore', ['handleMove']),\r\n  },}\r\n</script>\r\n\r\n<style scoped>\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(8, 1fr);\r\n  grid-gap: 1px;\r\n  width: 320px;\r\n  height: 320px;\r\n  background-color: #228b22;\r\n  box-sizing: border-box; \r\n}\r\n</style>","<!-- Cell.vue -->\r\n<template>\r\n  <div class=\"cell\" @click=\"$emit('click')\">\r\n    <div v-if=\"state === 'black'\" class=\"disk black\"></div>\r\n    <div v-if=\"state === 'white'\" class=\"disk white\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['state'],\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cell {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #008000;\r\n  border: 1px solid #000;\r\n  box-sizing: border-box; \r\n}\r\n\r\n.disk {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.black {\r\n  background-color: #000;\r\n}\r\n\r\n.white {\r\n  background-color: #fff;\r\n}\r\n</style>","import { render } from \"./BoardCell.vue?vue&type=template&id=1a969c88&scoped=true\"\nimport script from \"./BoardCell.vue?vue&type=script&lang=js\"\nexport * from \"./BoardCell.vue?vue&type=script&lang=js\"\n\nimport \"./BoardCell.vue?vue&type=style&index=0&id=1a969c88&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1a969c88\"]])\n\nexport default __exports__","import { render } from \"./ReversiBoard.vue?vue&type=template&id=962a8dac&scoped=true\"\nimport script from \"./ReversiBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ReversiBoard.vue?vue&type=script&lang=js\"\n\nimport \"./ReversiBoard.vue?vue&type=style&index=0&id=962a8dac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-962a8dac\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- ゲーム終了時の勝者表示 -->\r\n    <div v-if=\"isGameOver\">\r\n      <p>Game Over!</p>\r\n      <p>{{ winnerMessage }}</p>\r\n    </div>\r\n    <!-- 通常のプレイヤー表示 -->\r\n    <div v-else>\r\n      <p>Current Player: {{ currentPlayer }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  name: 'PlayerIndicator',\r\n  setup() {\r\n    const store = useStore();\r\n    const currentPlayer = computed(() => store.state.reversiStore.game.currentPlayer);\r\n    const isGameOver = computed(() => store.state.reversiStore.game.isGameOver);\r\n    const winner = computed(() => store.state.reversiStore.game.winner);\r\n\r\n    const winnerMessage = computed(() => {\r\n      if (winner.value) {\r\n        return `Winner: ${winner.value.toUpperCase()}!`;\r\n      }\r\n      return 'It\\'s a tie!';\r\n    });\r\n\r\n    return {\r\n      currentPlayer,\r\n      isGameOver,\r\n      winnerMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./PlayerIndicator.vue?vue&type=template&id=f588363c\"\nimport script from \"./PlayerIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./PlayerIndicator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ScoreBoard.vue -->\r\n<template>\r\n<div class=\"score-board\">\r\n    <div>Black: {{ score.black }}</div>\r\n    <div>White: {{ score.white }}</div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n    props: ['board'],\r\n    computed: {\r\n        ...mapState({\r\n            board: state => state.reversiStore.game.board,\r\n        }),\r\n        score() {\r\n            let black = 0\r\n            let white = 0\r\n            for (const row of this.board) {\r\n                for (const cell of row) {\r\n                    if (cell === 'black') black++\r\n                    if (cell === 'white') white++\r\n                }\r\n            }\r\n            return { black, white }\r\n        },\r\n    },\r\n}\r\n</script>\r\n","import { render } from \"./ScoreBoard.vue?vue&type=template&id=0382b2ea\"\nimport script from \"./ScoreBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ChatWindow.vue -->\r\n<template>\r\n<div class=\"chat-window\">\r\n    <ChatMessage v-for=\"(message, i) in messages\" :key=\"i\" :message=\"message.text\" :sender=\"message.sender\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport ChatMessage from './ChatMessage.vue'\r\n\r\nexport default {\r\ncomponents: { ChatMessage },\r\nprops: ['messages'],\r\n}\r\n</script>\r\n  ","<!-- ChatMessage.vue -->\r\n<template>\r\n    <div class=\"chat-message\" :class=\"sender\">\r\n        <div class=\"message\">{{ message }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['message', 'sender'],\r\n}\r\n</script>\r\n  ","import { render } from \"./ChatMessage.vue?vue&type=template&id=c83b8cda\"\nimport script from \"./ChatMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ChatWindow.vue?vue&type=template&id=1f42430f\"\nimport script from \"./ChatWindow.vue?vue&type=script&lang=js\"\nexport * from \"./ChatWindow.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ChatInput.vue -->\r\n<template>\r\n    <div class=\"chat-input\">\r\n        <!-- ローディング中はインジケータを表示 -->\r\n        <p v-if=\"isChatLoading\">ミープルボットが考え中...</p>\r\n        <!-- ローディングでないときはボタンを表示 -->\r\n        <input v-else  v-model=\"input\" @keyup.enter=\"send\" placeholder=\"ミープルボットへの質問を入れてください...\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n    data() {\r\n        return { input: '' }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            isChatLoading: state => state.reversiStore.isChatLoading,\r\n        }),\r\n    },\r\n    methods: {\r\n        send() {\r\n            this.$emit('send', this.input)\r\n            this.input = ''\r\n        },\r\n    },\r\n}\r\n</script>\r\n  ","import { render } from \"./ChatInput.vue?vue&type=template&id=2557ff14\"\nimport script from \"./ChatInput.vue?vue&type=script&lang=js\"\nexport * from \"./ChatInput.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- FeedbackInput.vue -->\r\n<template>\r\n    <div class=\"Feedback-input\">\r\n        <p>ボードゲームAIやこのサイトへのご意見をお聞かせください。</p>\r\n        <!-- ローディング中はインジケータを表示 -->\r\n        <p v-if=\"isFeedbackLoading\">送信中...</p>\r\n        <!-- ローディングでないときはボタンを表示 -->\r\n        <input v-else  v-model=\"input\" @keyup.enter=\"send\" placeholder=\"ご意見を入力してください。。。\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n    data() {\r\n        return { input: '' }\r\n    },\r\n    computed: {\r\n        ...mapState(['reversiStore/isFeedbackLoading']),\r\n    },\r\n    methods: {\r\n        send() {\r\n            this.$emit('send', this.input)\r\n            this.input = ''\r\n        },\r\n    },\r\n}\r\n</script>\r\n  ","import { render } from \"./FeedbackInput.vue?vue&type=template&id=7e962302\"\nimport script from \"./FeedbackInput.vue?vue&type=script&lang=js\"\nexport * from \"./FeedbackInput.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- ローディング中はインジケータを表示 -->\r\n    <p v-if=\"isNextMoveLoading\">ミープルボットが次の手を計算中...</p>\r\n    <!-- ローディングでないときはボタンを表示 -->\r\n    <button v-else @click=\"askAINextMove\">ミープルボットに次の手を決めさせる</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'AINextMoveButton',\r\n  computed: {\r\n    ...mapState({\r\n      isNextMoveLoading: state => state.reversiStore.isNextMoveLoading,\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions('reversiStore', ['getNextMove']),\r\n        \r\n    askAINextMove() {\r\n      // VuexストアのgetNextMoveアクションをディスパッチする\r\n      this.getNextMove();\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import { render } from \"./AINextMoveButton.vue?vue&type=template&id=4936d298\"\nimport script from \"./AINextMoveButton.vue?vue&type=script&lang=js\"\nexport * from \"./AINextMoveButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- ChatInput.vue -->\r\n<template>\r\n    <div class=\"chat-input\">\r\n        <button v-if=\"!isChatLoading\" @click=\"send('戦況は？')\">ミープルボットに戦況を聞く</button>\r\n        <button v-if=\"!isChatLoading\" @click=\"send('最善手は？')\">ミープルボットに最善手を聞く</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n    data() {\r\n        return { input: '' }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            isChatLoading: state => state.reversiStore.isChatLoading,\r\n        }),\r\n    },\r\n    methods: {\r\n        send(question) {\r\n            this.$emit('send', question)\r\n        },\r\n    },\r\n}\r\n</script>\r\n  ","import { render } from \"./ChatButton.vue?vue&type=template&id=400c3bc4\"\nimport script from \"./ChatButton.vue?vue&type=script&lang=js\"\nexport * from \"./ChatButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- Reversi.vue -->\r\n<template>\r\n  <div id=\"reversi\">\r\n    <ReversiBoard :board=\"game.board\"/>\r\n    <PlayerIndicator :player=\"game.currentPlayer\" />\r\n    <ScoreBoard :board=\"game.board\" />\r\n    <img :src=\"meepleBotImage\" alt=\"ミープルボット\" style=\"width: 200px;\">\r\n    <AINextMoveButton />\r\n    <ChatWindow :messages=\"chat.messages\" />\r\n    <ChatButton @send=\"sendMessage\"/>\r\n    <ChatInput @send=\"sendMessage\" />\r\n    <FeedbackInput @send=\"sendFeedback\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport meepleBotImage from '@/assets/MeepleBotBoardGame.jpg';\r\n</script>\r\n\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport ReversiBoard from './ReversiBoard.vue'\r\nimport PlayerIndicator from './PlayerIndicator.vue'\r\nimport ScoreBoard from './ScoreBoard.vue'\r\nimport ChatWindow from './ChatWindow.vue'\r\nimport ChatInput from './ChatInput.vue'\r\nimport FeedbackInput from './FeedbackInput.vue'\r\nimport AINextMoveButton from './AINextMoveButton.vue';\r\nimport ChatButton from './ChatButton.vue';\r\n\r\nexport default {\r\n  components: { ReversiBoard, PlayerIndicator, ScoreBoard, ChatWindow, ChatInput, AINextMoveButton, ChatButton, FeedbackInput },\r\n  computed: mapState({\r\n    game: state => state.reversiStore.game,\r\n    chat: state => state.reversiStore.chat\r\n  }),\r\n  methods: mapActions('reversiStore', ['sendMessage', 'sendFeedback']),\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#reversi {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>","import script from \"./ReversiViewer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReversiViewer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReversiViewer.vue?vue&type=style&index=0&id=069250ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-069250ba\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"chess-viewer\">\r\n    <PlayerIndicator :currentPlayer=\"game.currentPlayer\" :winner=\"game.winner\" />\r\n    <ChessBoard :board=\"game.board\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport ChessBoard from './ChessBoard.vue';\r\nimport PlayerIndicator from './PlayerIndicator.vue';\r\n\r\nexport default {\r\n  components: { ChessBoard, PlayerIndicator, /* ChatWindow, ChatInput, AINextMoveButton, ChatButton, FeedbackInput*/ },\r\n  computed: mapState({\r\n    game: state => state.chessStore.game,\r\n    chat: state => state.chessStore.chat\r\n  }),\r\n  methods: mapActions(['sendMessage', 'sendFeedback']),\r\n}\r\n\r\n</script>","<template>\r\n  <div class=\"chess-piece\" :class=\"{ 'invert-color': piece.color === 'White' }\">\r\n    <img v-if=piece.type :src=\"pieceImageSrc\" :alt=\"piece.type\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    piece: {\r\n      type: Object,\r\n      required: true, // { type: 'Pawn', color: 'White' } などの形式\r\n    },\r\n  },\r\n  computed: {\r\n    pieceImageSrc() {\r\n      if (this.piece.type === null) {\r\n        return '';\r\n      }\r\n      return `${require('@/assets/Chess/'+this.piece.type+'.webp')}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chess-piece {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.chess-piece img {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 白い駒の色を反転 */\r\n.invert-color img {\r\n  filter: invert(1);\r\n}\r\n\r\n</style>\r\n","import { render } from \"./ChessPiece.vue?vue&type=template&id=d88bd00a&scoped=true\"\nimport script from \"./ChessPiece.vue?vue&type=script&lang=js\"\nexport * from \"./ChessPiece.vue?vue&type=script&lang=js\"\n\nimport \"./ChessPiece.vue?vue&type=style&index=0&id=d88bd00a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d88bd00a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"board-square\" @click=\"squareClicked\" :class=\"squareClass\">\r\n    <ChessPiece v-if=\"piece\" :piece=\"piece\" />\r\n    <!-- <p>{{isPossibleMove}}</p> -->\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport ChessPiece from './ChessPiece.vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst props = defineProps({\r\n  piece: Object,\r\n  position: Object,\r\n  isPossibleMove: Boolean,\r\n})\r\n\r\n// isPossibleMoveを使用したロジック、例えば条件付きクラスを計算する\r\nconst squareClass = computed(() => {\r\n  const isDark = (props.position.x + props.position.y) % 2 === 1;\r\n  if(props.isPossibleMove) return 'possible-move'; // ここでリアクティブな参照を使用\r\n  return {\r\n    'board-square-dark': isDark,\r\n    'board-square-light': !isDark,\r\n  };\r\n});\r\n\r\nconst squareClicked = () => {\r\n    console.log(`Square clicked: ${props.position.x}, ${props.position.y}, ${props.piece?.type}, ${props.piece?.color}, `);\r\n    // 移動元を選択済の場合\r\n    if(store.state.chessStore.game.from != null){\r\n        // 動ければ移動先にコマを移動する\r\n        console.log(`from != null : ${props.position.x}, ${props.position.y}, ${props.piece?.type}, ${props.piece?.color}, `);\r\n        console.log(store.state.chessStore.game.from);\r\n        if(store.state.chessStore.game.from.x === props.position.x & store.state.chessStore.game.from.y === props.position.y){\r\n            console.log(`clearPossibleMoves : ${props.position.x}, ${props.position.y}, ${props.piece?.type}, ${props.piece?.color}, `);\r\n            store.commit('chessStore/clearPossibleMoves')\r\n            store.commit('chessStore/clearFrom')\r\n        }else if(props.isPossibleMove){\r\n            console.log(`performMove : ${props.position.x}, ${props.position.y}, ${props.piece?.type}, ${props.piece?.color}, `);\r\n            store.dispatch('chessStore/performMove', {\r\n                from: store.state.chessStore.game.from,\r\n                to: props.position,\r\n            });\r\n            // 移動元の場合未選択状態に戻す\r\n        }\r\n    // 移動元を未選択の場合\r\n    }else{\r\n        // console.log()\r\n        console.log(`from === null : ${props.position.x}, ${props.position.y}, ${props.piece?.type}, ${props.piece?.color}, `);\r\n        // 特定のピースとその位置に基づいて可能な移動先を計算する\r\n        store.dispatch('chessStore/calculatePossibleMoves', {\r\n            piece: props.piece, // 例えば白のポーン\r\n            position: props.position // ピースの現在位置\r\n        });\r\n    }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.board-square {\r\n  width: 40px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer; /* クリック可能なことを示す */\r\n}\r\n.possible-move {\r\n  background-color: #aff; /* ハイライト表示用の色 */\r\n}\r\n.board-square-dark {\r\n  background-color: #8B4513; /* 濃い色 */\r\n}\r\n.board-square-light {\r\n  background-color: #F5DEB3; /* 明るい色 */\r\n}\r\n</style>","import script from \"./BoardSquare.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BoardSquare.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BoardSquare.vue?vue&type=style&index=0&id=7327084f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7327084f\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"chess-board\">\r\n    <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"board-row\">\r\n      <BoardSquare\r\n        v-for=\"(square, columnIndex) in row\"\r\n        :key=\"columnIndex\"\r\n        :piece=\"{ type: square.type, color: square.color}\"\r\n        :position=\"{ x: columnIndex, y: rowIndex }\"\r\n        :isPossibleMove=\"square.isPossibleMove\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport BoardSquare from './BoardSquare.vue';\r\n\r\nconst store = useStore();\r\n\r\n// Vuex 4 のストアからチェス盤の状態を取得\r\nconst board = computed(() => store.state.chessStore.game.board);\r\n</script>\r\n\r\n<style scoped>\r\n.chess-board {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 320px; /* または任意のサイズ */\r\n  height: 320px; /* 盤面のサイズを指定 */\r\n  margin: auto;\r\n}\r\n.board-row {\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./ChessBoard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChessBoard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChessBoard.vue?vue&type=style&index=0&id=46996c22&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-46996c22\"]])\n\nexport default __exports__","<template>\r\n    <div id=\"player-indicator\">\r\n      <div v-if=\"winner\">\r\n        勝者: {{ winner }}\r\n      </div>\r\n      <div v-else>\r\n        現在のプレイヤー: {{ currentPlayer }}\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      currentPlayer: String,\r\n      winner: String\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  #player-indicator {\r\n    margin-bottom: 20px;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./PlayerIndicator.vue?vue&type=template&id=c743cf50\"\nimport script from \"./PlayerIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./PlayerIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./PlayerIndicator.vue?vue&type=style&index=0&id=c743cf50&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ChessViewer.vue?vue&type=template&id=4526cbf6\"\nimport script from \"./ChessViewer.vue?vue&type=script&lang=js\"\nexport * from \"./ChessViewer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport App from '@/App.vue'\r\nimport ArticleViewer from '@/components/Article/ArticleViewer.vue';\r\nimport ReversiViewer from '@/components/Reversi/ReversiViewer.vue';\r\nimport ChessViewer from '@/components/Chess/ChessViewer.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Top',\r\n    component: App\r\n  },\r\n  {\r\n    path: '/article/:id',\r\n    name: 'Article',\r\n    component: App,\r\n    components: {\r\n      Main: ArticleViewer\r\n    },\r\n  },\r\n  {\r\n    path: '/reversi',\r\n    name: 'Reversi',\r\n    component: App,\r\n    components: {\r\n      Main: ReversiViewer\r\n    },\r\n  },\r\n  {\r\n    path: '/chess',\r\n    name: 'Chess',\r\n    component: App,\r\n    components: {\r\n      Main: ChessViewer\r\n    },\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\nexport default router;","// main.js\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport store from './store'\r\nimport router from './router/index'\r\n\r\ncreateApp(App).use(store).use(router).mount('#app')\r\n","var map = {\n\t\"./Bishop.webp\": 6241,\n\t\"./King.webp\": 7955,\n\t\"./Knight.webp\": 7333,\n\t\"./Pawn.webp\": 1246,\n\t\"./Queen.webp\": 1706,\n\t\"./Rook.webp\": 8253\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8535;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/MeepleBotChallenge/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkMeepleBotBoardGame\"] = self[\"webpackChunkMeepleBotBoardGame\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(485); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementVNode","_createTextVNode","href","key","src","_imports_0","alt","_imports_1","_imports_2","_imports_3","class","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","baseUrl","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_router_view","name","default","_withCtx","Component","_createBlock","_resolveDynamicComponent","_createCommentVNode","_hoisted_9","_hoisted_10","_hoisted_11","_component_router_link","to","_","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_Fragment","_renderList","$options","availableTags","tag","onClick","$event","filterByTag","_hoisted_16","_hoisted_17","filteredArticles","article","imageUrl","title","_hoisted_18","_toDisplayString","_hoisted_19","_hoisted_20","data","store","useStore","articles","computed","state","articleStore","selectedTag","process","tags","Set","Object","values","this","forEach","add","Array","from","filter","includes","methods","__exports__","render","namespaced","require","content","getters","getArticleById","API_KEY","SERVER_URL","directions","flipDiscs","board","x","y","color","flipped","dx","dy","i","j","discsToFlip","push","isValidMove","tempBoard","JSON","parse","stringify","hasValidMove","calculateValidMoves","validMoves","reversiStore","game","fill","map","currentPlayer","chat","messages","threadId","isNextMoveLoading","isChatLoading","mutations","setGame","addMessage","message","setBoard","switchPlayer","setWinner","winner","setGameOver","isGameOver","setIsNextMoveLoading","setIsChatLoading","setThreadId","setIsFeedbackLoading","isFeedbackLoading","actions","sendFeedback","commit","post_response","axios","post","feedback","headers","console","log","sendMessage","text","sender","question","status","response","get","runId","handleMove","dispatch","error","endGame","blackCount","whiteCount","row","cell","getNextMove","length","chessStore","type","isPossibleMove","possibleMoves","checkForEndGame","hasLegalMove","calculateHasLegalMove","isCheck","isKingInCheck","calculatePossibleMoves","piece","kingPosition","some","move","setFrom","position","clearFrom","movePiece","setPossibleMoves","moves","newBoard","clearPossibleMoves","direction","startRow","newX","newY","flag","performMove","createStore","modules","innerHTML","mapGetters","$route","params","_ctx","_component_BoardCell","_cache","$emit","$props","props","components","BoardCell","mapState","mapActions","$setup","winnerMessage","setup","value","toUpperCase","score","black","white","_component_ChatMessage","_normalizeClass","ChatMessage","input","onKeyup","_withKeys","args","send","placeholder","askAINextMove","__default__","ReversiBoard","PlayerIndicator","ScoreBoard","ChatWindow","ChatInput","AINextMoveButton","ChatButton","FeedbackInput","_component_PlayerIndicator","_component_ChessBoard","pieceImageSrc","required","__props","squareClass","isDark","squareClicked","String","ChessBoard","routes","path","component","App","Main","ArticleViewer","ReversiViewer","ChessViewer","router","createRouter","history","createWebHistory","createApp","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","d","definition","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}